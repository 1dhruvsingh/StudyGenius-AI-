"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/signup/page",{

/***/ "(app-pages-browser)/./lib/auth-utils.ts":
/*!***************************!*\
  !*** ./lib/auth-utils.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearUserSession: function() { return /* binding */ clearUserSession; },\n/* harmony export */   forgotPassword: function() { return /* binding */ forgotPassword; },\n/* harmony export */   getUserSession: function() { return /* binding */ getUserSession; },\n/* harmony export */   loginUser: function() { return /* binding */ loginUser; },\n/* harmony export */   signupUser: function() { return /* binding */ signupUser; },\n/* harmony export */   storeUserSession: function() { return /* binding */ storeUserSession; }\n/* harmony export */ });\n// Basic user authentication utilities\n// Note: In a production app, you would use a proper auth solution like NextAuth.js, Auth0, etc.\n// Simulated auth functions - in a real app these would interact with a backend API\nasync function loginUser(credentials) {\n    // This is a mock implementation for demo purposes\n    // In a real app, this would make an API call to your backend\n    try {\n        // Simulate API call delay\n        await new Promise((resolve)=>setTimeout(resolve, 1000));\n        // For demo: accept any email that looks valid with any password\n        if (!credentials.email.includes(\"@\") || !credentials.password) {\n            return {\n                user: null,\n                error: \"Invalid email or password\"\n            };\n        }\n        // Mock successful login\n        return {\n            user: {\n                id: \"user-\" + Math.random().toString(36).substr(2, 9),\n                email: credentials.email,\n                name: credentials.email.split(\"@\")[0],\n                isVerified: true,\n                trialStatus: {\n                    isActive: false,\n                    startDate: null,\n                    endDate: null\n                },\n                subscription: {\n                    plan: \"free\",\n                    isActive: true\n                }\n            }\n        };\n    } catch (error) {\n        return {\n            user: null,\n            error: \"An unexpected error occurred\"\n        };\n    }\n}\nasync function signupUser(credentials) {\n    // This is a mock implementation for demo purposes\n    try {\n        // Simulate API call delay\n        await new Promise((resolve)=>setTimeout(resolve, 1000));\n        // Simple validation\n        if (!credentials.email.includes(\"@\")) {\n            return {\n                user: null,\n                error: \"Invalid email address\"\n            };\n        }\n        if (!credentials.name || credentials.name.length < 2) {\n            return {\n                user: null,\n                error: \"Name is required and must be at least 2 characters\"\n            };\n        }\n        if (!credentials.password || credentials.password.length < 6) {\n            return {\n                user: null,\n                error: \"Password must be at least 6 characters\"\n            };\n        }\n        // Mock successful signup\n        return {\n            user: {\n                id: \"user-\" + Math.random().toString(36).substr(2, 9),\n                email: credentials.email,\n                name: credentials.name,\n                isVerified: false,\n                trialStatus: {\n                    isActive: false,\n                    startDate: null,\n                    endDate: null\n                },\n                subscription: {\n                    plan: \"free\",\n                    isActive: true\n                }\n            }\n        };\n    } catch (error) {\n        return {\n            user: null,\n            error: \"An unexpected error occurred\"\n        };\n    }\n}\nfunction storeUserSession(user) {\n    // In a real app, you would store tokens, expiry, etc.\n    // For this demo, we'll just use localStorage\n    if (true) {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n    }\n}\nfunction getUserSession() {\n    if (true) {\n        const userJSON = localStorage.getItem(\"user\");\n        if (userJSON) {\n            try {\n                return JSON.parse(userJSON);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    return null;\n}\nfunction clearUserSession() {\n    if (true) {\n        localStorage.removeItem(\"user\");\n    }\n}\nfunction forgotPassword(email) {\n    // Mock implementation\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            if (!email || !email.includes(\"@\")) {\n                resolve({\n                    success: false,\n                    error: \"Please enter a valid email address\"\n                });\n            } else {\n                resolve({\n                    success: true\n                });\n            }\n        }, 1000);\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth-utils.ts\n"));

/***/ })

});